version: "3"

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
  adminer:
    image: adminer
    ports:
      - "8080:8080"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
  logstash:
    image: arm64v8/logstash:8.8.1
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5000:5000
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    depends_on:
      - elasticsearch
    restart: unless-stopped
  # logstash:
  #   # image: docker.elastic.co/logstash/logstash:7.10.0 remember to change for prod
  #   image: arm64v8/logstash:8.8.1
  #   platform: linux/arm64/v8
  #   volumes:
  #     - ./logstash/config:/usr/share/logstash/config
  #   ports:
  #     - 5000:5000
  #     - 9600:9600
    # command: ["-f", "/usr/share/logstash/config/logstash.conf"]
    # environment:
    #   LS_JAVA_OPTS: "-Xmx256m -Xms256m" 
    # depends_on:
    #   - elasticsearch
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.10.0
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    depends_on:
      - logstash
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
  # iyan:
  #   build: ./iyan
  #   environment: 
  #     - PORT=4001
  #   ports: 
  #     - 4001:4001
  #   volumes:
  #     - shared_keys:/keys

  # egusi:
  #   build: ./egusi
  #   environment:
  #     - PORT=6000
  #   ports:
  #     - 6000:6000
  #   volumes:
  #     - shared_keys:/keys
  rabbits:
    container_name: rabbits
    image: rabbitmq:3-management-alpine
    environment: 
      RABBITMQ_ERLANG_COOKIE: erlang_dev_only_cookie
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/usr/share/nginx/html

volumes:
  shared_keys: